AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  MB3 Reports
  SAM Stack for adding Acorn reports

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
  Api:
    Cors:
      # AllowOrigin: "'https://d1pv4sjhi3t4ux.cloudfront.net'"
      AllowOrigin: "'*'"
      AllowHeaders: "'*'"
      AllowMethods: "'*'"
      

Resources:
  AddReportFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: add_report/
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
      # Give just CRUD permissions to one table
      - DynamoDBCrudPolicy:
          TableName: !Ref acornDDB

      AutoPublishAlias: live

      # DeploymentPreference:
      #   Type: Linear10PercentEvery1Minute 
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /add
            Method: post

  GetReportsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: get_reports/
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
      # Give just CRUD permissions to one table
      - DynamoDBCrudPolicy:
          TableName: !Ref acornDDB

      AutoPublishAlias: live

      # DeploymentPreference:
      #   Type: Linear10PercentEvery1Minute 
      Events:
        Get:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /get
            Method: get

  acornDDB: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "UserID"
          AttributeType: "S"
        - 
          AttributeName: "Date"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "UserID"
          KeyType: "HASH"
        - 
          AttributeName: "Date"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      TableName: "acorn2"

  AliasErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub "${AddReportFunction}:live"
        - Name: FunctionName
          Value: !Ref AddReportFunction
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0

  LatestVersionErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub "${AddReportFunction}:live"
        - Name: FunctionName
          Value: !Ref AddReportFunction
        - Name: ExecutedVersion
          Value: !GetAtt AddReportFunction.Version.Version
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  AddReportApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/add/"
  AddReportFunction:
    Description: "Add Report Lambda Function ARN"
    Value: !GetAtt AddReportFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Add Report function"
    Value: !GetAtt AddReportFunctionRole.Arn
